'use strict';

exports.__esModule = true;

var _constants = require('./constants');

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  yesterday: {
    unit: _constants2.default.DAY,
    timing: _constants2.default.PREVIOUS
  },
  today: {
    unit: _constants2.default.DAY,
    timing: _constants2.default.CURRENT
  },
  tomorrow: {
    unit: _constants2.default.DAY,
    timing: _constants2.default.NEXT
  },
  startOfPreviousWeek: {
    unit: _constants2.default.WEEK,
    timing: _constants2.default.PREVIOUS,
    moment: _constants2.default.START
  },
  endOfPreviousWeek: {
    unit: _constants2.default.WEEK,
    timing: _constants2.default.PREVIOUS,
    moment: _constants2.default.END
  },
  startOfCurrentWeek: {
    unit: _constants2.default.WEEK,
    timing: _constants2.default.CURRENT,
    moment: _constants2.default.START
  },
  endOfCurrentWeek: {
    unit: _constants2.default.WEEK,
    timing: _constants2.default.CURRENT,
    moment: _constants2.default.END
  },
  startOfNextWeek: {
    unit: _constants2.default.WEEK,
    timing: _constants2.default.NEXT,
    moment: _constants2.default.START
  },
  endOfNextWeek: {
    unit: _constants2.default.WEEK,
    timing: _constants2.default.NEXT,
    moment: _constants2.default.END
  },
  startOfPreviousMonth: {
    unit: _constants2.default.MONTH,
    timing: _constants2.default.PREVIOUS,
    moment: _constants2.default.START
  },
  endOfPreviousMonth: {
    unit: _constants2.default.MONTH,
    timing: _constants2.default.PREVIOUS,
    moment: _constants2.default.END
  },
  startOfCurrentMonth: {
    unit: _constants2.default.MONTH,
    timing: _constants2.default.CURRENT,
    moment: _constants2.default.START
  },
  endOfCurrentMonth: {
    unit: _constants2.default.MONTH,
    timing: _constants2.default.CURRENT,
    moment: _constants2.default.END
  },
  startOfNextMonth: {
    unit: _constants2.default.MONTH,
    timing: _constants2.default.NEXT,
    moment: _constants2.default.START
  },
  endOfNextMonth: {
    unit: _constants2.default.MONTH,
    timing: _constants2.default.NEXT,
    moment: _constants2.default.END
  },
  startOfPreviousYear: {
    unit: _constants2.default.YEAR,
    timing: _constants2.default.PREVIOUS,
    moment: _constants2.default.START
  },
  endOfPreviousYear: {
    unit: _constants2.default.YEAR,
    timing: _constants2.default.PREVIOUS,
    moment: _constants2.default.END
  },
  startOfCurrentYear: {
    unit: _constants2.default.YEAR,
    timing: _constants2.default.CURRENT,
    moment: _constants2.default.START
  },
  endOfCurrentYear: {
    unit: _constants2.default.YEAR,
    timing: _constants2.default.CURRENT,
    moment: _constants2.default.END
  },
  startOfNextYear: {
    unit: _constants2.default.YEAR,
    timing: _constants2.default.NEXT,
    moment: _constants2.default.START
  },
  endOfNextYear: {
    unit: _constants2.default.YEAR,
    timing: _constants2.default.NEXT,
    moment: _constants2.default.END
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3JlbGF0aXZlL3ZhbHVlcy5qcyJdLCJuYW1lcyI6WyJ5ZXN0ZXJkYXkiLCJ1bml0IiwiQ29uc3RhbnRzIiwiREFZIiwidGltaW5nIiwiUFJFVklPVVMiLCJ0b2RheSIsIkNVUlJFTlQiLCJ0b21vcnJvdyIsIk5FWFQiLCJzdGFydE9mUHJldmlvdXNXZWVrIiwiV0VFSyIsIm1vbWVudCIsIlNUQVJUIiwiZW5kT2ZQcmV2aW91c1dlZWsiLCJFTkQiLCJzdGFydE9mQ3VycmVudFdlZWsiLCJlbmRPZkN1cnJlbnRXZWVrIiwic3RhcnRPZk5leHRXZWVrIiwiZW5kT2ZOZXh0V2VlayIsInN0YXJ0T2ZQcmV2aW91c01vbnRoIiwiTU9OVEgiLCJlbmRPZlByZXZpb3VzTW9udGgiLCJzdGFydE9mQ3VycmVudE1vbnRoIiwiZW5kT2ZDdXJyZW50TW9udGgiLCJzdGFydE9mTmV4dE1vbnRoIiwiZW5kT2ZOZXh0TW9udGgiLCJzdGFydE9mUHJldmlvdXNZZWFyIiwiWUVBUiIsImVuZE9mUHJldmlvdXNZZWFyIiwic3RhcnRPZkN1cnJlbnRZZWFyIiwiZW5kT2ZDdXJyZW50WWVhciIsInN0YXJ0T2ZOZXh0WWVhciIsImVuZE9mTmV4dFllYXIiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O2tCQUVlO0FBQ2JBLGFBQVc7QUFDVEMsVUFBTUMsb0JBQVVDLEdBRFA7QUFFVEMsWUFBUUYsb0JBQVVHO0FBRlQsR0FERTtBQUtiQyxTQUFPO0FBQ0xMLFVBQU1DLG9CQUFVQyxHQURYO0FBRUxDLFlBQVFGLG9CQUFVSztBQUZiLEdBTE07QUFTYkMsWUFBVTtBQUNSUCxVQUFNQyxvQkFBVUMsR0FEUjtBQUVSQyxZQUFRRixvQkFBVU87QUFGVixHQVRHO0FBYWJDLHVCQUFxQjtBQUNuQlQsVUFBTUMsb0JBQVVTLElBREc7QUFFbkJQLFlBQVFGLG9CQUFVRyxRQUZDO0FBR25CTyxZQUFRVixvQkFBVVc7QUFIQyxHQWJSO0FBa0JiQyxxQkFBbUI7QUFDakJiLFVBQU1DLG9CQUFVUyxJQURDO0FBRWpCUCxZQUFRRixvQkFBVUcsUUFGRDtBQUdqQk8sWUFBUVYsb0JBQVVhO0FBSEQsR0FsQk47QUF1QmJDLHNCQUFvQjtBQUNsQmYsVUFBTUMsb0JBQVVTLElBREU7QUFFbEJQLFlBQVFGLG9CQUFVSyxPQUZBO0FBR2xCSyxZQUFRVixvQkFBVVc7QUFIQSxHQXZCUDtBQTRCYkksb0JBQWtCO0FBQ2hCaEIsVUFBTUMsb0JBQVVTLElBREE7QUFFaEJQLFlBQVFGLG9CQUFVSyxPQUZGO0FBR2hCSyxZQUFRVixvQkFBVWE7QUFIRixHQTVCTDtBQWlDYkcsbUJBQWlCO0FBQ2ZqQixVQUFNQyxvQkFBVVMsSUFERDtBQUVmUCxZQUFRRixvQkFBVU8sSUFGSDtBQUdmRyxZQUFRVixvQkFBVVc7QUFISCxHQWpDSjtBQXNDYk0saUJBQWU7QUFDYmxCLFVBQU1DLG9CQUFVUyxJQURIO0FBRWJQLFlBQVFGLG9CQUFVTyxJQUZMO0FBR2JHLFlBQVFWLG9CQUFVYTtBQUhMLEdBdENGO0FBMkNiSyx3QkFBc0I7QUFDcEJuQixVQUFNQyxvQkFBVW1CLEtBREk7QUFFcEJqQixZQUFRRixvQkFBVUcsUUFGRTtBQUdwQk8sWUFBUVYsb0JBQVVXO0FBSEUsR0EzQ1Q7QUFnRGJTLHNCQUFvQjtBQUNsQnJCLFVBQU1DLG9CQUFVbUIsS0FERTtBQUVsQmpCLFlBQVFGLG9CQUFVRyxRQUZBO0FBR2xCTyxZQUFRVixvQkFBVWE7QUFIQSxHQWhEUDtBQXFEYlEsdUJBQXFCO0FBQ25CdEIsVUFBTUMsb0JBQVVtQixLQURHO0FBRW5CakIsWUFBUUYsb0JBQVVLLE9BRkM7QUFHbkJLLFlBQVFWLG9CQUFVVztBQUhDLEdBckRSO0FBMERiVyxxQkFBbUI7QUFDakJ2QixVQUFNQyxvQkFBVW1CLEtBREM7QUFFakJqQixZQUFRRixvQkFBVUssT0FGRDtBQUdqQkssWUFBUVYsb0JBQVVhO0FBSEQsR0ExRE47QUErRGJVLG9CQUFrQjtBQUNoQnhCLFVBQU1DLG9CQUFVbUIsS0FEQTtBQUVoQmpCLFlBQVFGLG9CQUFVTyxJQUZGO0FBR2hCRyxZQUFRVixvQkFBVVc7QUFIRixHQS9ETDtBQW9FYmEsa0JBQWdCO0FBQ2R6QixVQUFNQyxvQkFBVW1CLEtBREY7QUFFZGpCLFlBQVFGLG9CQUFVTyxJQUZKO0FBR2RHLFlBQVFWLG9CQUFVYTtBQUhKLEdBcEVIO0FBeUViWSx1QkFBcUI7QUFDbkIxQixVQUFNQyxvQkFBVTBCLElBREc7QUFFbkJ4QixZQUFRRixvQkFBVUcsUUFGQztBQUduQk8sWUFBUVYsb0JBQVVXO0FBSEMsR0F6RVI7QUE4RWJnQixxQkFBbUI7QUFDakI1QixVQUFNQyxvQkFBVTBCLElBREM7QUFFakJ4QixZQUFRRixvQkFBVUcsUUFGRDtBQUdqQk8sWUFBUVYsb0JBQVVhO0FBSEQsR0E5RU47QUFtRmJlLHNCQUFvQjtBQUNsQjdCLFVBQU1DLG9CQUFVMEIsSUFERTtBQUVsQnhCLFlBQVFGLG9CQUFVSyxPQUZBO0FBR2xCSyxZQUFRVixvQkFBVVc7QUFIQSxHQW5GUDtBQXdGYmtCLG9CQUFrQjtBQUNoQjlCLFVBQU1DLG9CQUFVMEIsSUFEQTtBQUVoQnhCLFlBQVFGLG9CQUFVSyxPQUZGO0FBR2hCSyxZQUFRVixvQkFBVWE7QUFIRixHQXhGTDtBQTZGYmlCLG1CQUFpQjtBQUNmL0IsVUFBTUMsb0JBQVUwQixJQUREO0FBRWZ4QixZQUFRRixvQkFBVU8sSUFGSDtBQUdmRyxZQUFRVixvQkFBVVc7QUFISCxHQTdGSjtBQWtHYm9CLGlCQUFlO0FBQ2JoQyxVQUFNQyxvQkFBVTBCLElBREg7QUFFYnhCLFlBQVFGLG9CQUFVTyxJQUZMO0FBR2JHLFlBQVFWLG9CQUFVYTtBQUhMO0FBbEdGLEMiLCJmaWxlIjoidmFsdWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnN0YW50cyBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgeWVzdGVyZGF5OiB7XG4gICAgdW5pdDogQ29uc3RhbnRzLkRBWSxcbiAgICB0aW1pbmc6IENvbnN0YW50cy5QUkVWSU9VUyxcbiAgfSxcbiAgdG9kYXk6IHtcbiAgICB1bml0OiBDb25zdGFudHMuREFZLFxuICAgIHRpbWluZzogQ29uc3RhbnRzLkNVUlJFTlQsXG4gIH0sXG4gIHRvbW9ycm93OiB7XG4gICAgdW5pdDogQ29uc3RhbnRzLkRBWSxcbiAgICB0aW1pbmc6IENvbnN0YW50cy5ORVhULFxuICB9LFxuICBzdGFydE9mUHJldmlvdXNXZWVrOiB7XG4gICAgdW5pdDogQ29uc3RhbnRzLldFRUssXG4gICAgdGltaW5nOiBDb25zdGFudHMuUFJFVklPVVMsXG4gICAgbW9tZW50OiBDb25zdGFudHMuU1RBUlQsXG4gIH0sXG4gIGVuZE9mUHJldmlvdXNXZWVrOiB7XG4gICAgdW5pdDogQ29uc3RhbnRzLldFRUssXG4gICAgdGltaW5nOiBDb25zdGFudHMuUFJFVklPVVMsXG4gICAgbW9tZW50OiBDb25zdGFudHMuRU5ELFxuICB9LFxuICBzdGFydE9mQ3VycmVudFdlZWs6IHtcbiAgICB1bml0OiBDb25zdGFudHMuV0VFSyxcbiAgICB0aW1pbmc6IENvbnN0YW50cy5DVVJSRU5ULFxuICAgIG1vbWVudDogQ29uc3RhbnRzLlNUQVJULFxuICB9LFxuICBlbmRPZkN1cnJlbnRXZWVrOiB7XG4gICAgdW5pdDogQ29uc3RhbnRzLldFRUssXG4gICAgdGltaW5nOiBDb25zdGFudHMuQ1VSUkVOVCxcbiAgICBtb21lbnQ6IENvbnN0YW50cy5FTkQsXG4gIH0sXG4gIHN0YXJ0T2ZOZXh0V2Vlazoge1xuICAgIHVuaXQ6IENvbnN0YW50cy5XRUVLLFxuICAgIHRpbWluZzogQ29uc3RhbnRzLk5FWFQsXG4gICAgbW9tZW50OiBDb25zdGFudHMuU1RBUlQsXG4gIH0sXG4gIGVuZE9mTmV4dFdlZWs6IHtcbiAgICB1bml0OiBDb25zdGFudHMuV0VFSyxcbiAgICB0aW1pbmc6IENvbnN0YW50cy5ORVhULFxuICAgIG1vbWVudDogQ29uc3RhbnRzLkVORCxcbiAgfSxcbiAgc3RhcnRPZlByZXZpb3VzTW9udGg6IHtcbiAgICB1bml0OiBDb25zdGFudHMuTU9OVEgsXG4gICAgdGltaW5nOiBDb25zdGFudHMuUFJFVklPVVMsXG4gICAgbW9tZW50OiBDb25zdGFudHMuU1RBUlQsXG4gIH0sXG4gIGVuZE9mUHJldmlvdXNNb250aDoge1xuICAgIHVuaXQ6IENvbnN0YW50cy5NT05USCxcbiAgICB0aW1pbmc6IENvbnN0YW50cy5QUkVWSU9VUyxcbiAgICBtb21lbnQ6IENvbnN0YW50cy5FTkQsXG4gIH0sXG4gIHN0YXJ0T2ZDdXJyZW50TW9udGg6IHtcbiAgICB1bml0OiBDb25zdGFudHMuTU9OVEgsXG4gICAgdGltaW5nOiBDb25zdGFudHMuQ1VSUkVOVCxcbiAgICBtb21lbnQ6IENvbnN0YW50cy5TVEFSVCxcbiAgfSxcbiAgZW5kT2ZDdXJyZW50TW9udGg6IHtcbiAgICB1bml0OiBDb25zdGFudHMuTU9OVEgsXG4gICAgdGltaW5nOiBDb25zdGFudHMuQ1VSUkVOVCxcbiAgICBtb21lbnQ6IENvbnN0YW50cy5FTkQsXG4gIH0sXG4gIHN0YXJ0T2ZOZXh0TW9udGg6IHtcbiAgICB1bml0OiBDb25zdGFudHMuTU9OVEgsXG4gICAgdGltaW5nOiBDb25zdGFudHMuTkVYVCxcbiAgICBtb21lbnQ6IENvbnN0YW50cy5TVEFSVCxcbiAgfSxcbiAgZW5kT2ZOZXh0TW9udGg6IHtcbiAgICB1bml0OiBDb25zdGFudHMuTU9OVEgsXG4gICAgdGltaW5nOiBDb25zdGFudHMuTkVYVCxcbiAgICBtb21lbnQ6IENvbnN0YW50cy5FTkQsXG4gIH0sXG4gIHN0YXJ0T2ZQcmV2aW91c1llYXI6IHtcbiAgICB1bml0OiBDb25zdGFudHMuWUVBUixcbiAgICB0aW1pbmc6IENvbnN0YW50cy5QUkVWSU9VUyxcbiAgICBtb21lbnQ6IENvbnN0YW50cy5TVEFSVCxcbiAgfSxcbiAgZW5kT2ZQcmV2aW91c1llYXI6IHtcbiAgICB1bml0OiBDb25zdGFudHMuWUVBUixcbiAgICB0aW1pbmc6IENvbnN0YW50cy5QUkVWSU9VUyxcbiAgICBtb21lbnQ6IENvbnN0YW50cy5FTkQsXG4gIH0sXG4gIHN0YXJ0T2ZDdXJyZW50WWVhcjoge1xuICAgIHVuaXQ6IENvbnN0YW50cy5ZRUFSLFxuICAgIHRpbWluZzogQ29uc3RhbnRzLkNVUlJFTlQsXG4gICAgbW9tZW50OiBDb25zdGFudHMuU1RBUlQsXG4gIH0sXG4gIGVuZE9mQ3VycmVudFllYXI6IHtcbiAgICB1bml0OiBDb25zdGFudHMuWUVBUixcbiAgICB0aW1pbmc6IENvbnN0YW50cy5DVVJSRU5ULFxuICAgIG1vbWVudDogQ29uc3RhbnRzLkVORCxcbiAgfSxcbiAgc3RhcnRPZk5leHRZZWFyOiB7XG4gICAgdW5pdDogQ29uc3RhbnRzLllFQVIsXG4gICAgdGltaW5nOiBDb25zdGFudHMuTkVYVCxcbiAgICBtb21lbnQ6IENvbnN0YW50cy5TVEFSVCxcbiAgfSxcbiAgZW5kT2ZOZXh0WWVhcjoge1xuICAgIHVuaXQ6IENvbnN0YW50cy5ZRUFSLFxuICAgIHRpbWluZzogQ29uc3RhbnRzLk5FWFQsXG4gICAgbW9tZW50OiBDb25zdGFudHMuRU5ELFxuICB9LFxufTtcbiJdfQ==