'use strict';

exports.__esModule = true;

var _propTypes = require('prop-types');

exports.default = {
  absolute: _propTypes.PropTypes.string,
  dates: _propTypes.PropTypes.shape({
    endOfTheCurrentMonth: _propTypes.PropTypes.string,
    endOfTheCurrentWeek: _propTypes.PropTypes.string,
    endOfTheCurrentYear: _propTypes.PropTypes.string,
    endOfTheNextMonth: _propTypes.PropTypes.string,
    endOfTheNextWeek: _propTypes.PropTypes.string,
    endOfTheNextYear: _propTypes.PropTypes.string,
    endOfThePreviousMonth: _propTypes.PropTypes.string,
    endOfThePreviousWeek: _propTypes.PropTypes.string,
    endOfThePreviousYear: _propTypes.PropTypes.string,
    startOfTheCurrentMonth: _propTypes.PropTypes.string,
    startOfTheCurrentWeek: _propTypes.PropTypes.string,
    startOfTheCurrentYear: _propTypes.PropTypes.string,
    startOfTheNextMonth: _propTypes.PropTypes.string,
    startOfTheNextWeek: _propTypes.PropTypes.string,
    startOfTheNextYear: _propTypes.PropTypes.string,
    startOfThePreviousMonth: _propTypes.PropTypes.string,
    startOfThePreviousWeek: _propTypes.PropTypes.string,
    startOfThePreviousYear: _propTypes.PropTypes.string,
    today: _propTypes.PropTypes.string,
    tomorrow: _propTypes.PropTypes.string,
    yesterday: _propTypes.PropTypes.string
  }),
  day: _propTypes.PropTypes.shape({
    plural: _propTypes.PropTypes.string,
    singular: _propTypes.PropTypes.string
  }),
  endDate: _propTypes.PropTypes.string,
  endDatePlaceholder: _propTypes.PropTypes.string,
  from: _propTypes.PropTypes.string,
  month: _propTypes.PropTypes.shape({
    plural: _propTypes.PropTypes.string,
    singular: _propTypes.PropTypes.string
  }),
  period: _propTypes.PropTypes.string,
  relative: _propTypes.PropTypes.string,
  startDate: _propTypes.PropTypes.string,
  startDatePlaceholder: _propTypes.PropTypes.string,
  to: _propTypes.PropTypes.string,
  week: _propTypes.PropTypes.shape({
    plural: _propTypes.PropTypes.string,
    singular: _propTypes.PropTypes.string
  })
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90cmFuc2xhdGlvbnMvcHJvcC10eXBlcy5qcyJdLCJuYW1lcyI6WyJhYnNvbHV0ZSIsIlByb3BUeXBlcyIsInN0cmluZyIsImRhdGVzIiwic2hhcGUiLCJlbmRPZlRoZUN1cnJlbnRNb250aCIsImVuZE9mVGhlQ3VycmVudFdlZWsiLCJlbmRPZlRoZUN1cnJlbnRZZWFyIiwiZW5kT2ZUaGVOZXh0TW9udGgiLCJlbmRPZlRoZU5leHRXZWVrIiwiZW5kT2ZUaGVOZXh0WWVhciIsImVuZE9mVGhlUHJldmlvdXNNb250aCIsImVuZE9mVGhlUHJldmlvdXNXZWVrIiwiZW5kT2ZUaGVQcmV2aW91c1llYXIiLCJzdGFydE9mVGhlQ3VycmVudE1vbnRoIiwic3RhcnRPZlRoZUN1cnJlbnRXZWVrIiwic3RhcnRPZlRoZUN1cnJlbnRZZWFyIiwic3RhcnRPZlRoZU5leHRNb250aCIsInN0YXJ0T2ZUaGVOZXh0V2VlayIsInN0YXJ0T2ZUaGVOZXh0WWVhciIsInN0YXJ0T2ZUaGVQcmV2aW91c01vbnRoIiwic3RhcnRPZlRoZVByZXZpb3VzV2VlayIsInN0YXJ0T2ZUaGVQcmV2aW91c1llYXIiLCJ0b2RheSIsInRvbW9ycm93IiwieWVzdGVyZGF5IiwiZGF5IiwicGx1cmFsIiwic2luZ3VsYXIiLCJlbmREYXRlIiwiZW5kRGF0ZVBsYWNlaG9sZGVyIiwiZnJvbSIsIm1vbnRoIiwicGVyaW9kIiwicmVsYXRpdmUiLCJzdGFydERhdGUiLCJzdGFydERhdGVQbGFjZWhvbGRlciIsInRvIiwid2VlayJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztrQkFFZTtBQUNiQSxZQUFVQyxxQkFBVUMsTUFEUDtBQUViQyxTQUFPRixxQkFBVUcsS0FBVixDQUFnQjtBQUNyQkMsMEJBQXNCSixxQkFBVUMsTUFEWDtBQUVyQkkseUJBQXFCTCxxQkFBVUMsTUFGVjtBQUdyQksseUJBQXFCTixxQkFBVUMsTUFIVjtBQUlyQk0sdUJBQW1CUCxxQkFBVUMsTUFKUjtBQUtyQk8sc0JBQWtCUixxQkFBVUMsTUFMUDtBQU1yQlEsc0JBQWtCVCxxQkFBVUMsTUFOUDtBQU9yQlMsMkJBQXVCVixxQkFBVUMsTUFQWjtBQVFyQlUsMEJBQXNCWCxxQkFBVUMsTUFSWDtBQVNyQlcsMEJBQXNCWixxQkFBVUMsTUFUWDtBQVVyQlksNEJBQXdCYixxQkFBVUMsTUFWYjtBQVdyQmEsMkJBQXVCZCxxQkFBVUMsTUFYWjtBQVlyQmMsMkJBQXVCZixxQkFBVUMsTUFaWjtBQWFyQmUseUJBQXFCaEIscUJBQVVDLE1BYlY7QUFjckJnQix3QkFBb0JqQixxQkFBVUMsTUFkVDtBQWVyQmlCLHdCQUFvQmxCLHFCQUFVQyxNQWZUO0FBZ0JyQmtCLDZCQUF5Qm5CLHFCQUFVQyxNQWhCZDtBQWlCckJtQiw0QkFBd0JwQixxQkFBVUMsTUFqQmI7QUFrQnJCb0IsNEJBQXdCckIscUJBQVVDLE1BbEJiO0FBbUJyQnFCLFdBQU90QixxQkFBVUMsTUFuQkk7QUFvQnJCc0IsY0FBVXZCLHFCQUFVQyxNQXBCQztBQXFCckJ1QixlQUFXeEIscUJBQVVDO0FBckJBLEdBQWhCLENBRk07QUF5QmJ3QixPQUFLekIscUJBQVVHLEtBQVYsQ0FBZ0I7QUFDbkJ1QixZQUFRMUIscUJBQVVDLE1BREM7QUFFbkIwQixjQUFVM0IscUJBQVVDO0FBRkQsR0FBaEIsQ0F6QlE7QUE2QmIyQixXQUFTNUIscUJBQVVDLE1BN0JOO0FBOEJiNEIsc0JBQW9CN0IscUJBQVVDLE1BOUJqQjtBQStCYjZCLFFBQU05QixxQkFBVUMsTUEvQkg7QUFnQ2I4QixTQUFPL0IscUJBQVVHLEtBQVYsQ0FBZ0I7QUFDckJ1QixZQUFRMUIscUJBQVVDLE1BREc7QUFFckIwQixjQUFVM0IscUJBQVVDO0FBRkMsR0FBaEIsQ0FoQ007QUFvQ2IrQixVQUFRaEMscUJBQVVDLE1BcENMO0FBcUNiZ0MsWUFBVWpDLHFCQUFVQyxNQXJDUDtBQXNDYmlDLGFBQVdsQyxxQkFBVUMsTUF0Q1I7QUF1Q2JrQyx3QkFBc0JuQyxxQkFBVUMsTUF2Q25CO0FBd0NibUMsTUFBSXBDLHFCQUFVQyxNQXhDRDtBQXlDYm9DLFFBQU1yQyxxQkFBVUcsS0FBVixDQUFnQjtBQUNwQnVCLFlBQVExQixxQkFBVUMsTUFERTtBQUVwQjBCLGNBQVUzQixxQkFBVUM7QUFGQSxHQUFoQjtBQXpDTyxDIiwiZmlsZSI6InByb3AtdHlwZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm9wVHlwZXMgfSBmcm9tICdwcm9wLXR5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhYnNvbHV0ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZGF0ZXM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgZW5kT2ZUaGVDdXJyZW50TW9udGg6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZW5kT2ZUaGVDdXJyZW50V2VlazogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBlbmRPZlRoZUN1cnJlbnRZZWFyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGVuZE9mVGhlTmV4dE1vbnRoOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGVuZE9mVGhlTmV4dFdlZWs6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZW5kT2ZUaGVOZXh0WWVhcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBlbmRPZlRoZVByZXZpb3VzTW9udGg6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZW5kT2ZUaGVQcmV2aW91c1dlZWs6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZW5kT2ZUaGVQcmV2aW91c1llYXI6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3RhcnRPZlRoZUN1cnJlbnRNb250aDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdGFydE9mVGhlQ3VycmVudFdlZWs6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3RhcnRPZlRoZUN1cnJlbnRZZWFyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0YXJ0T2ZUaGVOZXh0TW9udGg6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3RhcnRPZlRoZU5leHRXZWVrOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0YXJ0T2ZUaGVOZXh0WWVhcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdGFydE9mVGhlUHJldmlvdXNNb250aDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdGFydE9mVGhlUHJldmlvdXNXZWVrOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0YXJ0T2ZUaGVQcmV2aW91c1llYXI6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG9kYXk6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG9tb3Jyb3c6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgeWVzdGVyZGF5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICB9KSxcbiAgZGF5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHBsdXJhbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzaW5ndWxhcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgfSksXG4gIGVuZERhdGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGVuZERhdGVQbGFjZWhvbGRlcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgbW9udGg6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcGx1cmFsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHNpbmd1bGFyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB9KSxcbiAgcGVyaW9kOiBQcm9wVHlwZXMuc3RyaW5nLFxuICByZWxhdGl2ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgc3RhcnREYXRlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzdGFydERhdGVQbGFjZWhvbGRlcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgdG86IFByb3BUeXBlcy5zdHJpbmcsXG4gIHdlZWs6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcGx1cmFsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHNpbmd1bGFyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB9KSxcbn07XG4iXX0=