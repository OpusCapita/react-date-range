export default {
  absolute: 'Absolute',
  dates: {
    endOfTheCurrentMonth: 'End of the current month',
    endOfTheCurrentWeek: 'End of the current week',
    endOfTheCurrentYear: 'End of the current year',
    endOfTheNextMonth: 'End of the next month',
    endOfTheNextWeek: 'End of the next week',
    endOfTheNextYear: 'End of the next year',
    endOfThePreviousMonth: 'End of the previous month',
    endOfThePreviousWeek: 'End of the previous week',
    endOfThePreviousYear: 'End of the previous year',
    startOfTheCurrentMonth: 'Start of the current month',
    startOfTheCurrentWeek: 'Start of the current week',
    startOfTheCurrentYear: 'Start of the current year',
    startOfTheNextMonth: 'Start of the next month',
    startOfTheNextWeek: 'Start of the next week',
    startOfTheNextYear: 'Start of the next year',
    startOfThePreviousMonth: 'Start of the previous month',
    startOfThePreviousWeek: 'Start of the previous week',
    startOfThePreviousYear: 'Start of the previous year',
    today: 'Today',
    tomorrow: 'Tomorrow',
    yesterday: 'Yesterday'
  },
  day: {
    plural: 'days',
    singular: 'day'
  },
  endDate: 'Last day',
  from: 'From',
  month: {
    plural: 'months',
    singular: 'month'
  },
  period: 'Period',
  relative: 'Relative',
  startDate: 'First day',
  to: 'To',
  week: {
    plural: 'weeks',
    singular: 'week'
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90cmFuc2xhdGlvbnMvZGVmYXVsdC1wcm9wcy5qcyJdLCJuYW1lcyI6WyJhYnNvbHV0ZSIsImRhdGVzIiwiZW5kT2ZUaGVDdXJyZW50TW9udGgiLCJlbmRPZlRoZUN1cnJlbnRXZWVrIiwiZW5kT2ZUaGVDdXJyZW50WWVhciIsImVuZE9mVGhlTmV4dE1vbnRoIiwiZW5kT2ZUaGVOZXh0V2VlayIsImVuZE9mVGhlTmV4dFllYXIiLCJlbmRPZlRoZVByZXZpb3VzTW9udGgiLCJlbmRPZlRoZVByZXZpb3VzV2VlayIsImVuZE9mVGhlUHJldmlvdXNZZWFyIiwic3RhcnRPZlRoZUN1cnJlbnRNb250aCIsInN0YXJ0T2ZUaGVDdXJyZW50V2VlayIsInN0YXJ0T2ZUaGVDdXJyZW50WWVhciIsInN0YXJ0T2ZUaGVOZXh0TW9udGgiLCJzdGFydE9mVGhlTmV4dFdlZWsiLCJzdGFydE9mVGhlTmV4dFllYXIiLCJzdGFydE9mVGhlUHJldmlvdXNNb250aCIsInN0YXJ0T2ZUaGVQcmV2aW91c1dlZWsiLCJzdGFydE9mVGhlUHJldmlvdXNZZWFyIiwidG9kYXkiLCJ0b21vcnJvdyIsInllc3RlcmRheSIsImRheSIsInBsdXJhbCIsInNpbmd1bGFyIiwiZW5kRGF0ZSIsImZyb20iLCJtb250aCIsInBlcmlvZCIsInJlbGF0aXZlIiwic3RhcnREYXRlIiwidG8iLCJ3ZWVrIl0sIm1hcHBpbmdzIjoiQUFBQSxlQUFlO0FBQ2JBLFlBQVUsVUFERztBQUViQyxTQUFPO0FBQ0xDLDBCQUFzQiwwQkFEakI7QUFFTEMseUJBQXFCLHlCQUZoQjtBQUdMQyx5QkFBcUIseUJBSGhCO0FBSUxDLHVCQUFtQix1QkFKZDtBQUtMQyxzQkFBa0Isc0JBTGI7QUFNTEMsc0JBQWtCLHNCQU5iO0FBT0xDLDJCQUF1QiwyQkFQbEI7QUFRTEMsMEJBQXNCLDBCQVJqQjtBQVNMQywwQkFBc0IsMEJBVGpCO0FBVUxDLDRCQUF3Qiw0QkFWbkI7QUFXTEMsMkJBQXVCLDJCQVhsQjtBQVlMQywyQkFBdUIsMkJBWmxCO0FBYUxDLHlCQUFxQix5QkFiaEI7QUFjTEMsd0JBQW9CLHdCQWRmO0FBZUxDLHdCQUFvQix3QkFmZjtBQWdCTEMsNkJBQXlCLDZCQWhCcEI7QUFpQkxDLDRCQUF3Qiw0QkFqQm5CO0FBa0JMQyw0QkFBd0IsNEJBbEJuQjtBQW1CTEMsV0FBTyxPQW5CRjtBQW9CTEMsY0FBVSxVQXBCTDtBQXFCTEMsZUFBVztBQXJCTixHQUZNO0FBeUJiQyxPQUFLO0FBQ0hDLFlBQVEsTUFETDtBQUVIQyxjQUFVO0FBRlAsR0F6QlE7QUE2QmJDLFdBQVMsVUE3Qkk7QUE4QmJDLFFBQU0sTUE5Qk87QUErQmJDLFNBQU87QUFDTEosWUFBUSxRQURIO0FBRUxDLGNBQVU7QUFGTCxHQS9CTTtBQW1DYkksVUFBUSxRQW5DSztBQW9DYkMsWUFBVSxVQXBDRztBQXFDYkMsYUFBVyxXQXJDRTtBQXNDYkMsTUFBSSxJQXRDUztBQXVDYkMsUUFBTTtBQUNKVCxZQUFRLE9BREo7QUFFSkMsY0FBVTtBQUZOO0FBdkNPLENBQWYiLCJmaWxlIjoiZGVmYXVsdC1wcm9wcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgYWJzb2x1dGU6ICdBYnNvbHV0ZScsXG4gIGRhdGVzOiB7XG4gICAgZW5kT2ZUaGVDdXJyZW50TW9udGg6ICdFbmQgb2YgdGhlIGN1cnJlbnQgbW9udGgnLFxuICAgIGVuZE9mVGhlQ3VycmVudFdlZWs6ICdFbmQgb2YgdGhlIGN1cnJlbnQgd2VlaycsXG4gICAgZW5kT2ZUaGVDdXJyZW50WWVhcjogJ0VuZCBvZiB0aGUgY3VycmVudCB5ZWFyJyxcbiAgICBlbmRPZlRoZU5leHRNb250aDogJ0VuZCBvZiB0aGUgbmV4dCBtb250aCcsXG4gICAgZW5kT2ZUaGVOZXh0V2VlazogJ0VuZCBvZiB0aGUgbmV4dCB3ZWVrJyxcbiAgICBlbmRPZlRoZU5leHRZZWFyOiAnRW5kIG9mIHRoZSBuZXh0IHllYXInLFxuICAgIGVuZE9mVGhlUHJldmlvdXNNb250aDogJ0VuZCBvZiB0aGUgcHJldmlvdXMgbW9udGgnLFxuICAgIGVuZE9mVGhlUHJldmlvdXNXZWVrOiAnRW5kIG9mIHRoZSBwcmV2aW91cyB3ZWVrJyxcbiAgICBlbmRPZlRoZVByZXZpb3VzWWVhcjogJ0VuZCBvZiB0aGUgcHJldmlvdXMgeWVhcicsXG4gICAgc3RhcnRPZlRoZUN1cnJlbnRNb250aDogJ1N0YXJ0IG9mIHRoZSBjdXJyZW50IG1vbnRoJyxcbiAgICBzdGFydE9mVGhlQ3VycmVudFdlZWs6ICdTdGFydCBvZiB0aGUgY3VycmVudCB3ZWVrJyxcbiAgICBzdGFydE9mVGhlQ3VycmVudFllYXI6ICdTdGFydCBvZiB0aGUgY3VycmVudCB5ZWFyJyxcbiAgICBzdGFydE9mVGhlTmV4dE1vbnRoOiAnU3RhcnQgb2YgdGhlIG5leHQgbW9udGgnLFxuICAgIHN0YXJ0T2ZUaGVOZXh0V2VlazogJ1N0YXJ0IG9mIHRoZSBuZXh0IHdlZWsnLFxuICAgIHN0YXJ0T2ZUaGVOZXh0WWVhcjogJ1N0YXJ0IG9mIHRoZSBuZXh0IHllYXInLFxuICAgIHN0YXJ0T2ZUaGVQcmV2aW91c01vbnRoOiAnU3RhcnQgb2YgdGhlIHByZXZpb3VzIG1vbnRoJyxcbiAgICBzdGFydE9mVGhlUHJldmlvdXNXZWVrOiAnU3RhcnQgb2YgdGhlIHByZXZpb3VzIHdlZWsnLFxuICAgIHN0YXJ0T2ZUaGVQcmV2aW91c1llYXI6ICdTdGFydCBvZiB0aGUgcHJldmlvdXMgeWVhcicsXG4gICAgdG9kYXk6ICdUb2RheScsXG4gICAgdG9tb3Jyb3c6ICdUb21vcnJvdycsXG4gICAgeWVzdGVyZGF5OiAnWWVzdGVyZGF5JyxcbiAgfSxcbiAgZGF5OiB7XG4gICAgcGx1cmFsOiAnZGF5cycsXG4gICAgc2luZ3VsYXI6ICdkYXknLFxuICB9LFxuICBlbmREYXRlOiAnTGFzdCBkYXknLFxuICBmcm9tOiAnRnJvbScsXG4gIG1vbnRoOiB7XG4gICAgcGx1cmFsOiAnbW9udGhzJyxcbiAgICBzaW5ndWxhcjogJ21vbnRoJyxcbiAgfSxcbiAgcGVyaW9kOiAnUGVyaW9kJyxcbiAgcmVsYXRpdmU6ICdSZWxhdGl2ZScsXG4gIHN0YXJ0RGF0ZTogJ0ZpcnN0IGRheScsXG4gIHRvOiAnVG8nLFxuICB3ZWVrOiB7XG4gICAgcGx1cmFsOiAnd2Vla3MnLFxuICAgIHNpbmd1bGFyOiAnd2VlaycsXG4gIH0sXG59O1xuIl19