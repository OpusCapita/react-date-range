import { PropTypes } from 'prop-types';
export default {
  absolute: PropTypes.string,
  dates: PropTypes.shape({
    endOfTheCurrentMonth: PropTypes.string,
    endOfTheCurrentWeek: PropTypes.string,
    endOfTheCurrentYear: PropTypes.string,
    endOfTheNextMonth: PropTypes.string,
    endOfTheNextWeek: PropTypes.string,
    endOfTheNextYear: PropTypes.string,
    endOfThePreviousMonth: PropTypes.string,
    endOfThePreviousWeek: PropTypes.string,
    endOfThePreviousYear: PropTypes.string,
    followingWeekday: PropTypes.string,
    previousWeekday: PropTypes.string,
    startOfTheCurrentMonth: PropTypes.string,
    startOfTheCurrentWeek: PropTypes.string,
    startOfTheCurrentYear: PropTypes.string,
    startOfTheNextMonth: PropTypes.string,
    startOfTheNextWeek: PropTypes.string,
    startOfTheNextYear: PropTypes.string,
    startOfThePreviousMonth: PropTypes.string,
    startOfThePreviousWeek: PropTypes.string,
    startOfThePreviousYear: PropTypes.string,
    today: PropTypes.string,
    tomorrow: PropTypes.string,
    yesterday: PropTypes.string
  }),
  day: PropTypes.shape({
    plural: PropTypes.string,
    singular: PropTypes.string
  }),
  endDate: PropTypes.string,
  endDatePlaceholder: PropTypes.string,
  from: PropTypes.string,
  month: PropTypes.shape({
    plural: PropTypes.string,
    singular: PropTypes.string
  }),
  period: PropTypes.string,
  relative: PropTypes.string,
  startDate: PropTypes.string,
  startDatePlaceholder: PropTypes.string,
  to: PropTypes.string,
  week: PropTypes.shape({
    plural: PropTypes.string,
    singular: PropTypes.string
  }),
  weekday: PropTypes.shape({
    plural: PropTypes.string,
    singular: PropTypes.string
  })
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90cmFuc2xhdGlvbnMvcHJvcC10eXBlcy5qcyJdLCJuYW1lcyI6WyJQcm9wVHlwZXMiLCJhYnNvbHV0ZSIsInN0cmluZyIsImRhdGVzIiwic2hhcGUiLCJlbmRPZlRoZUN1cnJlbnRNb250aCIsImVuZE9mVGhlQ3VycmVudFdlZWsiLCJlbmRPZlRoZUN1cnJlbnRZZWFyIiwiZW5kT2ZUaGVOZXh0TW9udGgiLCJlbmRPZlRoZU5leHRXZWVrIiwiZW5kT2ZUaGVOZXh0WWVhciIsImVuZE9mVGhlUHJldmlvdXNNb250aCIsImVuZE9mVGhlUHJldmlvdXNXZWVrIiwiZW5kT2ZUaGVQcmV2aW91c1llYXIiLCJmb2xsb3dpbmdXZWVrZGF5IiwicHJldmlvdXNXZWVrZGF5Iiwic3RhcnRPZlRoZUN1cnJlbnRNb250aCIsInN0YXJ0T2ZUaGVDdXJyZW50V2VlayIsInN0YXJ0T2ZUaGVDdXJyZW50WWVhciIsInN0YXJ0T2ZUaGVOZXh0TW9udGgiLCJzdGFydE9mVGhlTmV4dFdlZWsiLCJzdGFydE9mVGhlTmV4dFllYXIiLCJzdGFydE9mVGhlUHJldmlvdXNNb250aCIsInN0YXJ0T2ZUaGVQcmV2aW91c1dlZWsiLCJzdGFydE9mVGhlUHJldmlvdXNZZWFyIiwidG9kYXkiLCJ0b21vcnJvdyIsInllc3RlcmRheSIsImRheSIsInBsdXJhbCIsInNpbmd1bGFyIiwiZW5kRGF0ZSIsImVuZERhdGVQbGFjZWhvbGRlciIsImZyb20iLCJtb250aCIsInBlcmlvZCIsInJlbGF0aXZlIiwic3RhcnREYXRlIiwic3RhcnREYXRlUGxhY2Vob2xkZXIiLCJ0byIsIndlZWsiLCJ3ZWVrZGF5Il0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxTQUFULFFBQTBCLFlBQTFCO0FBRUEsZUFBZTtBQUNiQyxFQUFBQSxRQUFRLEVBQUVELFNBQVMsQ0FBQ0UsTUFEUDtBQUViQyxFQUFBQSxLQUFLLEVBQUVILFNBQVMsQ0FBQ0ksS0FBVixDQUFnQjtBQUNyQkMsSUFBQUEsb0JB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QUFTLENBQUNJLEtBQVYsQ0FBZ0I7QUFDdkJ5QixJQUFBQSxNQUFNLEVBQUU3QixTQUFTLENBQUNFLE1BREs7QUFFdkI0QixJQUFBQSxRQUFRLEVBQUU5QixTQUFTLENBQUNFO0FBRkcsR0FBaEI7QUEvQ0ksQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3BUeXBlcyB9IGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGFic29sdXRlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBkYXRlczogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBlbmRPZlRoZUN1cnJlbnRNb250aDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBlbmRPZlRoZUN1cnJlbnRXZWVrOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGVuZE9mVGhlQ3VycmVudFllYXI6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZW5kT2ZUaGVOZXh0TW9udGg6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZW5kT2ZUaGVOZXh0V2VlazogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBlbmRPZlRoZU5leHRZZWFyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGVuZE9mVGhlUHJldmlvdXNNb250aDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBlbmRPZlRoZVByZXZpb3VzV2VlazogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBlbmRPZlRoZVByZXZpb3VzWWVhcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBmb2xsb3dpbmdXZWVrZGF5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHByZXZpb3VzV2Vla2RheTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdGFydE9mVGhlQ3VycmVudE1vbnRoOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0YXJ0T2ZUaGVDdXJyZW50V2VlazogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdGFydE9mVGhlQ3VycmVudFllYXI6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3RhcnRPZlRoZU5leHRNb250aDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdGFydE9mVGhlTmV4dFdlZWs6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3RhcnRPZlRoZU5leHRZZWFyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0YXJ0T2ZUaGVQcmV2aW91c01vbnRoOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHN0YXJ0T2ZUaGVQcmV2aW91c1dlZWs6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3RhcnRPZlRoZVByZXZpb3VzWWVhcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0b2RheTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0b21vcnJvdzogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB5ZXN0ZXJkYXk6IFByb3BUeXBlcy5zdHJpbmcsXG4gIH0pLFxuICBkYXk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcGx1cmFsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHNpbmd1bGFyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB9KSxcbiAgZW5kRGF0ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZW5kRGF0ZVBsYWNlaG9sZGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBtb250aDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBwbHVyYWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc2luZ3VsYXI6IFByb3BUeXBlcy5zdHJpbmcsXG4gIH0pLFxuICBwZXJpb2Q6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJlbGF0aXZlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzdGFydERhdGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHN0YXJ0RGF0ZVBsYWNlaG9sZGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0bzogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2VlazogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBwbHVyYWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc2luZ3VsYXI6IFByb3BUeXBlcy5zdHJpbmcsXG4gIH0pLFxuICB3ZWVrZGF5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHBsdXJhbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzaW5ndWxhcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgfSksXG59O1xuIl19