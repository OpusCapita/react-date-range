import { PropTypes } from 'prop-types';
import Constants from './constants';

var granularities = [Constants.DAY, Constants.WEEK, Constants.MONTH, Constants.YEAR];

export var relativeDateValueShape = PropTypes.shape({
  unit: PropTypes.oneOf(granularities),
  timing: PropTypes.oneOf([Constants.PREVIOUS, Constants.CURRENT, Constants.NEXT]),
  moment: PropTypes.oneOf([Constants.END, Constants.START])
});

export var relativeDateShape = PropTypes.shape({
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),
  value: relativeDateValueShape,
  granularity: PropTypes.oneOf(granularities),
  past: PropTypes.bool
});

export default {
  endDate: relativeDateShape,
  onChange: PropTypes.func,
  startDate: relativeDateShape
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3JlbGF0aXZlL3Byb3AtdHlwZXMuanMiXSwibmFtZXMiOlsiUHJvcFR5cGVzIiwiQ29uc3RhbnRzIiwiZ3JhbnVsYXJpdGllcyIsIkRBWSIsIldFRUsiLCJNT05USCIsIllFQVIiLCJyZWxhdGl2ZURhdGVWYWx1ZVNoYXBlIiwic2hhcGUiLCJ1bml0Iiwib25lT2YiLCJ0aW1pbmciLCJQUkVWSU9VUyIsIkNVUlJFTlQiLCJORVhUIiwibW9tZW50IiwiRU5EIiwiU1RBUlQiLCJyZWxhdGl2ZURhdGVTaGFwZSIsImxhYmVsIiwib25lT2ZUeXBlIiwic3RyaW5nIiwiZWxlbWVudCIsInZhbHVlIiwiZ3JhbnVsYXJpdHkiLCJwYXN0IiwiYm9vbCIsImVuZERhdGUiLCJvbkNoYW5nZSIsImZ1bmMiLCJzdGFydERhdGUiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLFNBQVQsUUFBMEIsWUFBMUI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLGFBQXRCOztBQUVBLElBQU1DLGdCQUFnQixDQUFDRCxVQUFVRSxHQUFYLEVBQWdCRixVQUFVRyxJQUExQixFQUFnQ0gsVUFBVUksS0FBMUMsRUFBaURKLFVBQVVLLElBQTNELENBQXRCOztBQUVBLE9BQU8sSUFBTUMseUJBQXlCUCxVQUFVUSxLQUFWLENBQWdCO0FBQ3BEQyxRQUFNVCxVQUFVVSxLQUFWLENBQWdCUixhQUFoQixDQUQ4QztBQUVwRFMsVUFBUVgsVUFBVVUsS0FBVixDQUFnQixDQUFDVCxVQUFVVyxRQUFYLEVBQXFCWCxVQUFVWSxPQUEvQixFQUF3Q1osVUFBVWEsSUFBbEQsQ0FBaEIsQ0FGNEM7QUFHcERDLFVBQVFmLFVBQVVVLEtBQVYsQ0FBZ0IsQ0FBQ1QsVUFBVWUsR0FBWCxFQUFnQmYsVUFBVWdCLEtBQTFCLENBQWhCO0FBSDRDLENBQWhCLENBQS9COztBQU1QLE9BQU8sSUFBTUMsb0JBQW9CbEIsVUFBVVEsS0FBVixDQUFnQjtBQUMvQ1csU0FBT25CLFVBQVVvQixTQUFWLENBQW9CLENBQUNwQixVQUFVcUIsTUFBWCxFQUFtQnJCLFVBQVVzQixPQUE3QixDQUFwQixDQUR3QztBQUUvQ0MsU0FBT2hCLHNCQUZ3QztBQUcvQ2lCLGVBQWF4QixVQUFVVSxLQUFWLENBQWdCUixhQUFoQixDQUhrQztBQUkvQ3VCLFFBQU16QixVQUFVMEI7QUFKK0IsQ0FBaEIsQ0FBMUI7O0FBT1AsZUFBZTtBQUNiQyxXQUFTVCxpQkFESTtBQUViVSxZQUFVNUIsVUFBVTZCLElBRlA7QUFHYkMsYUFBV1o7QUFIRSxDQUFmIiwiZmlsZSI6InByb3AtdHlwZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm9wVHlwZXMgfSBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xuXG5jb25zdCBncmFudWxhcml0aWVzID0gW0NvbnN0YW50cy5EQVksIENvbnN0YW50cy5XRUVLLCBDb25zdGFudHMuTU9OVEgsIENvbnN0YW50cy5ZRUFSXTtcblxuZXhwb3J0IGNvbnN0IHJlbGF0aXZlRGF0ZVZhbHVlU2hhcGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICB1bml0OiBQcm9wVHlwZXMub25lT2YoZ3JhbnVsYXJpdGllcyksXG4gIHRpbWluZzogUHJvcFR5cGVzLm9uZU9mKFtDb25zdGFudHMuUFJFVklPVVMsIENvbnN0YW50cy5DVVJSRU5ULCBDb25zdGFudHMuTkVYVF0pLFxuICBtb21lbnQ6IFByb3BUeXBlcy5vbmVPZihbQ29uc3RhbnRzLkVORCwgQ29uc3RhbnRzLlNUQVJUXSksXG59KTtcblxuZXhwb3J0IGNvbnN0IHJlbGF0aXZlRGF0ZVNoYXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgbGFiZWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5lbGVtZW50XSksXG4gIHZhbHVlOiByZWxhdGl2ZURhdGVWYWx1ZVNoYXBlLFxuICBncmFudWxhcml0eTogUHJvcFR5cGVzLm9uZU9mKGdyYW51bGFyaXRpZXMpLFxuICBwYXN0OiBQcm9wVHlwZXMuYm9vbCxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGVuZERhdGU6IHJlbGF0aXZlRGF0ZVNoYXBlLFxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gIHN0YXJ0RGF0ZTogcmVsYXRpdmVEYXRlU2hhcGUsXG59O1xuIl19