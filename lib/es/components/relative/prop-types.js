import { PropTypes } from 'prop-types';
import Constants from './constants';

var granularities = [Constants.DAY, Constants.WEEK, Constants.MONTH, Constants.YEAR];

var relativeDate = PropTypes.shape({
  unit: PropTypes.oneOf(granularities),
  timing: PropTypes.oneOf([Constants.PREVIOUS, Constants.CURRENT, Constants.NEXT]),
  moment: PropTypes.oneOf([Constants.END, Constants.START])
});

var relativeDateShape = PropTypes.shape({
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,
  value: relativeDate.isRequired,
  granularity: PropTypes.oneOf(granularities).isRequired,
  past: PropTypes.bool
});

export default {
  endDate: relativeDate,
  onChange: PropTypes.func,
  options: PropTypes.arrayOf(relativeDateShape),
  startDate: relativeDate
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3JlbGF0aXZlL3Byb3AtdHlwZXMuanMiXSwibmFtZXMiOlsiUHJvcFR5cGVzIiwiQ29uc3RhbnRzIiwiZ3JhbnVsYXJpdGllcyIsIkRBWSIsIldFRUsiLCJNT05USCIsIllFQVIiLCJyZWxhdGl2ZURhdGUiLCJzaGFwZSIsInVuaXQiLCJvbmVPZiIsInRpbWluZyIsIlBSRVZJT1VTIiwiQ1VSUkVOVCIsIk5FWFQiLCJtb21lbnQiLCJFTkQiLCJTVEFSVCIsInJlbGF0aXZlRGF0ZVNoYXBlIiwibGFiZWwiLCJvbmVPZlR5cGUiLCJzdHJpbmciLCJlbGVtZW50IiwiaXNSZXF1aXJlZCIsInZhbHVlIiwiZ3JhbnVsYXJpdHkiLCJwYXN0IiwiYm9vbCIsImVuZERhdGUiLCJvbkNoYW5nZSIsImZ1bmMiLCJvcHRpb25zIiwiYXJyYXlPZiIsInN0YXJ0RGF0ZSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsU0FBVCxRQUEwQixZQUExQjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsYUFBdEI7O0FBRUEsSUFBTUMsZ0JBQWdCLENBQUNELFVBQVVFLEdBQVgsRUFBZ0JGLFVBQVVHLElBQTFCLEVBQWdDSCxVQUFVSSxLQUExQyxFQUFpREosVUFBVUssSUFBM0QsQ0FBdEI7O0FBRUEsSUFBTUMsZUFBZVAsVUFBVVEsS0FBVixDQUFnQjtBQUNuQ0MsUUFBTVQsVUFBVVUsS0FBVixDQUFnQlIsYUFBaEIsQ0FENkI7QUFFbkNTLFVBQVFYLFVBQVVVLEtBQVYsQ0FBZ0IsQ0FBQ1QsVUFBVVcsUUFBWCxFQUFxQlgsVUFBVVksT0FBL0IsRUFBd0NaLFVBQVVhLElBQWxELENBQWhCLENBRjJCO0FBR25DQyxVQUFRZixVQUFVVSxLQUFWLENBQWdCLENBQUNULFVBQVVlLEdBQVgsRUFBZ0JmLFVBQVVnQixLQUExQixDQUFoQjtBQUgyQixDQUFoQixDQUFyQjs7QUFNQSxJQUFNQyxvQkFBb0JsQixVQUFVUSxLQUFWLENBQWdCO0FBQ3hDVyxTQUFPbkIsVUFBVW9CLFNBQVYsQ0FBb0IsQ0FBQ3BCLFVBQVVxQixNQUFYLEVBQW1CckIsVUFBVXNCLE9BQTdCLENBQXBCLEVBQTJEQyxVQUQxQjtBQUV4Q0MsU0FBT2pCLGFBQWFnQixVQUZvQjtBQUd4Q0UsZUFBYXpCLFVBQVVVLEtBQVYsQ0FBZ0JSLGFBQWhCLEVBQStCcUIsVUFISjtBQUl4Q0csUUFBTTFCLFVBQVUyQjtBQUp3QixDQUFoQixDQUExQjs7QUFPQSxlQUFlO0FBQ2JDLFdBQVNyQixZQURJO0FBRWJzQixZQUFVN0IsVUFBVThCLElBRlA7QUFHYkMsV0FBUy9CLFVBQVVnQyxPQUFWLENBQWtCZCxpQkFBbEIsQ0FISTtBQUliZSxhQUFXMUI7QUFKRSxDQUFmIiwiZmlsZSI6InByb3AtdHlwZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm9wVHlwZXMgfSBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xuXG5jb25zdCBncmFudWxhcml0aWVzID0gW0NvbnN0YW50cy5EQVksIENvbnN0YW50cy5XRUVLLCBDb25zdGFudHMuTU9OVEgsIENvbnN0YW50cy5ZRUFSXTtcblxuY29uc3QgcmVsYXRpdmVEYXRlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgdW5pdDogUHJvcFR5cGVzLm9uZU9mKGdyYW51bGFyaXRpZXMpLFxuICB0aW1pbmc6IFByb3BUeXBlcy5vbmVPZihbQ29uc3RhbnRzLlBSRVZJT1VTLCBDb25zdGFudHMuQ1VSUkVOVCwgQ29uc3RhbnRzLk5FWFRdKSxcbiAgbW9tZW50OiBQcm9wVHlwZXMub25lT2YoW0NvbnN0YW50cy5FTkQsIENvbnN0YW50cy5TVEFSVF0pLFxufSk7XG5cbmNvbnN0IHJlbGF0aXZlRGF0ZVNoYXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgbGFiZWw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5lbGVtZW50XSkuaXNSZXF1aXJlZCxcbiAgdmFsdWU6IHJlbGF0aXZlRGF0ZS5pc1JlcXVpcmVkLFxuICBncmFudWxhcml0eTogUHJvcFR5cGVzLm9uZU9mKGdyYW51bGFyaXRpZXMpLmlzUmVxdWlyZWQsXG4gIHBhc3Q6IFByb3BUeXBlcy5ib29sLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZW5kRGF0ZTogcmVsYXRpdmVEYXRlLFxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9wdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKHJlbGF0aXZlRGF0ZVNoYXBlKSxcbiAgc3RhcnREYXRlOiByZWxhdGl2ZURhdGUsXG59O1xuIl19