import Constants from './constants';
import values from './values';

export default [{
  label: 'Yesterday',
  value: values.yesterday,
  order: 1,
  granularity: Constants.DAY,
  past: true
}, {
  label: 'Today',
  value: values.today,
  order: 2,
  granularity: Constants.DAY
}, {
  label: 'Tomorrow',
  value: values.tomorrow,
  order: 3,
  granularity: Constants.DAY
}, {
  label: 'Start of the previous week',
  value: values.startOfPreviousWeek,
  order: 1,
  granularity: Constants.WEEK,
  past: true
}, {
  label: 'End of the previous week',
  value: values.endOfPreviousWeek,
  order: 2,
  granularity: Constants.WEEK,
  past: true
}, {
  label: 'Start of the current week',
  value: values.startOfCurrentWeek,
  order: 3,
  granularity: Constants.WEEK,
  past: true
}, {
  label: 'End of the current week',
  value: values.endOfCurrentWeek,
  order: 4,
  granularity: Constants.WEEK
}, {
  label: 'Start of the next week',
  value: values.startOfNextWeek,
  order: 5,
  granularity: Constants.WEEK
}, {
  label: 'End of the next week',
  value: values.endOfNextWeek,
  order: 6,
  granularity: Constants.WEEK
}, {
  label: 'Start of the previous month',
  value: values.startOfPreviousMonth,
  order: 1,
  granularity: Constants.MONTH,
  past: true
}, {
  label: 'End of the previous month',
  value: values.endOfPreviousMonth,
  order: 2,
  granularity: Constants.MONTH,
  past: true
}, {
  label: 'Start of the current month',
  value: values.startOfCurrentMonth,
  order: 3,
  granularity: Constants.MONTH,
  past: true
}, {
  label: 'End of the current month',
  value: values.endOfCurrentMonth,
  order: 4,
  granularity: Constants.MONTH
}, {
  label: 'Start of the next month',
  value: values.startOfNextMonth,
  order: 5,
  granularity: Constants.MONTH
}, {
  label: 'End of the next month',
  value: values.endOfNextMonth,
  order: 6,
  granularity: Constants.MONTH
}, {
  label: 'Start of the previous year',
  value: values.startOfPreviousYear,
  order: 1,
  granularity: Constants.YEAR,
  past: true
}, {
  label: 'End of the previous year',
  value: values.endOfPreviousYear,
  order: 2,
  granularity: Constants.YEAR,
  past: true
}, {
  label: 'Start of the current year',
  value: values.startOfCurrentYear,
  order: 3,
  granularity: Constants.YEAR,
  past: true
}, {
  label: 'End of the current year',
  value: values.endOfCurrentYear,
  order: 4,
  granularity: Constants.YEAR
}, {
  label: 'Start of the next year',
  value: values.startOfNextYear,
  order: 5,
  granularity: Constants.YEAR
}, {
  label: 'End of the next year',
  value: values.endOfNextYear,
  order: 6,
  granularity: Constants.YEAR
}];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3JlbGF0aXZlL3JlbGF0aXZlLW9wdGlvbnMuanMiXSwibmFtZXMiOlsiQ29uc3RhbnRzIiwidmFsdWVzIiwibGFiZWwiLCJ2YWx1ZSIsInllc3RlcmRheSIsIm9yZGVyIiwiZ3JhbnVsYXJpdHkiLCJEQVkiLCJwYXN0IiwidG9kYXkiLCJ0b21vcnJvdyIsInN0YXJ0T2ZQcmV2aW91c1dlZWsiLCJXRUVLIiwiZW5kT2ZQcmV2aW91c1dlZWsiLCJzdGFydE9mQ3VycmVudFdlZWsiLCJlbmRPZkN1cnJlbnRXZWVrIiwic3RhcnRPZk5leHRXZWVrIiwiZW5kT2ZOZXh0V2VlayIsInN0YXJ0T2ZQcmV2aW91c01vbnRoIiwiTU9OVEgiLCJlbmRPZlByZXZpb3VzTW9udGgiLCJzdGFydE9mQ3VycmVudE1vbnRoIiwiZW5kT2ZDdXJyZW50TW9udGgiLCJzdGFydE9mTmV4dE1vbnRoIiwiZW5kT2ZOZXh0TW9udGgiLCJzdGFydE9mUHJldmlvdXNZZWFyIiwiWUVBUiIsImVuZE9mUHJldmlvdXNZZWFyIiwic3RhcnRPZkN1cnJlbnRZZWFyIiwiZW5kT2ZDdXJyZW50WWVhciIsInN0YXJ0T2ZOZXh0WWVhciIsImVuZE9mTmV4dFllYXIiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLFNBQVAsTUFBc0IsYUFBdEI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLFVBQW5COztBQUVBLGVBQWUsQ0FDYjtBQUNFQyxTQUFPLFdBRFQ7QUFFRUMsU0FBT0YsT0FBT0csU0FGaEI7QUFHRUMsU0FBTyxDQUhUO0FBSUVDLGVBQWFOLFVBQVVPLEdBSnpCO0FBS0VDLFFBQU07QUFMUixDQURhLEVBUWI7QUFDRU4sU0FBTyxPQURUO0FBRUVDLFNBQU9GLE9BQU9RLEtBRmhCO0FBR0VKLFNBQU8sQ0FIVDtBQUlFQyxlQUFhTixVQUFVTztBQUp6QixDQVJhLEVBY2I7QUFDRUwsU0FBTyxVQURUO0FBRUVDLFNBQU9GLE9BQU9TLFFBRmhCO0FBR0VMLFNB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QjtBQUp6QixDQTdIYSxFQW1JYjtBQUNFeEIsU0FBTyxzQkFEVDtBQUVFQyxTQUFPRixPQUFPOEIsYUFGaEI7QUFHRTFCLFNBQU8sQ0FIVDtBQUlFQyxlQUFhTixVQUFVMEI7QUFKekIsQ0FuSWEsQ0FBZiIsImZpbGUiOiJyZWxhdGl2ZS1vcHRpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnN0YW50cyBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgdmFsdWVzIGZyb20gJy4vdmFsdWVzJztcblxuZXhwb3J0IGRlZmF1bHQgW1xuICB7XG4gICAgbGFiZWw6ICdZZXN0ZXJkYXknLFxuICAgIHZhbHVlOiB2YWx1ZXMueWVzdGVyZGF5LFxuICAgIG9yZGVyOiAxLFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuREFZLFxuICAgIHBhc3Q6IHRydWUsXG4gIH0sXG4gIHtcbiAgICBsYWJlbDogJ1RvZGF5JyxcbiAgICB2YWx1ZTogdmFsdWVzLnRvZGF5LFxuICAgIG9yZGVyOiAyLFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuREFZLFxuICB9LFxuICB7XG4gICAgbGFiZWw6ICdUb21vcnJvdycsXG4gICAgdmFsdWU6IHZhbHVlcy50b21vcnJvdyxcbiAgICBvcmRlcjogMyxcbiAgICBncmFudWxhcml0eTogQ29uc3RhbnRzLkRBWSxcbiAgfSxcbiAge1xuICAgIGxhYmVsOiAnU3RhcnQgb2YgdGhlIHByZXZpb3VzIHdlZWsnLFxuICAgIHZhbHVlOiB2YWx1ZXMuc3RhcnRPZlByZXZpb3VzV2VlayxcbiAgICBvcmRlcjogMSxcbiAgICBncmFudWxhcml0eTogQ29uc3RhbnRzLldFRUssXG4gICAgcGFzdDogdHJ1ZSxcbiAgfSxcbiAge1xuICAgIGxhYmVsOiAnRW5kIG9mIHRoZSBwcmV2aW91cyB3ZWVrJyxcbiAgICB2YWx1ZTogdmFsdWVzLmVuZE9mUHJldmlvdXNXZWVrLFxuICAgIG9yZGVyOiAyLFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuV0VFSyxcbiAgICBwYXN0OiB0cnVlLFxuICB9LFxuICB7XG4gICAgbGFiZWw6ICdTdGFydCBvZiB0aGUgY3VycmVudCB3ZWVrJyxcbiAgICB2YWx1ZTogdmFsdWVzLnN0YXJ0T2ZDdXJyZW50V2VlayxcbiAgICBvcmRlcjogMyxcbiAgICBncmFudWxhcml0eTogQ29uc3RhbnRzLldFRUssXG4gICAgcGFzdDogdHJ1ZSxcbiAgfSxcbiAge1xuICAgIGxhYmVsOiAnRW5kIG9mIHRoZSBjdXJyZW50IHdlZWsnLFxuICAgIHZhbHVlOiB2YWx1ZXMuZW5kT2ZDdXJyZW50V2VlayxcbiAgICBvcmRlcjogNCxcbiAgICBncmFudWxhcml0eTogQ29uc3RhbnRzLldFRUssXG4gIH0sXG4gIHtcbiAgICBsYWJlbDogJ1N0YXJ0IG9mIHRoZSBuZXh0IHdlZWsnLFxuICAgIHZhbHVlOiB2YWx1ZXMuc3RhcnRPZk5leHRXZWVrLFxuICAgIG9yZGVyOiA1LFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuV0VFSyxcbiAgfSxcbiAge1xuICAgIGxhYmVsOiAnRW5kIG9mIHRoZSBuZXh0IHdlZWsnLFxuICAgIHZhbHVlOiB2YWx1ZXMuZW5kT2ZOZXh0V2VlayxcbiAgICBvcmRlcjogNixcbiAgICBncmFudWxhcml0eTogQ29uc3RhbnRzLldFRUssXG4gIH0sXG4gIHtcbiAgICBsYWJlbDogJ1N0YXJ0IG9mIHRoZSBwcmV2aW91cyBtb250aCcsXG4gICAgdmFsdWU6IHZhbHVlcy5zdGFydE9mUHJldmlvdXNNb250aCxcbiAgICBvcmRlcjogMSxcbiAgICBncmFudWxhcml0eTogQ29uc3RhbnRzLk1PTlRILFxuICAgIHBhc3Q6IHRydWUsXG4gIH0sXG4gIHtcbiAgICBsYWJlbDogJ0VuZCBvZiB0aGUgcHJldmlvdXMgbW9udGgnLFxuICAgIHZhbHVlOiB2YWx1ZXMuZW5kT2ZQcmV2aW91c01vbnRoLFxuICAgIG9yZGVyOiAyLFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuTU9OVEgsXG4gICAgcGFzdDogdHJ1ZSxcbiAgfSxcbiAge1xuICAgIGxhYmVsOiAnU3RhcnQgb2YgdGhlIGN1cnJlbnQgbW9udGgnLFxuICAgIHZhbHVlOiB2YWx1ZXMuc3RhcnRPZkN1cnJlbnRNb250aCxcbiAgICBvcmRlcjogMyxcbiAgICBncmFudWxhcml0eTogQ29uc3RhbnRzLk1PTlRILFxuICAgIHBhc3Q6IHRydWUsXG4gIH0sXG4gIHtcbiAgICBsYWJlbDogJ0VuZCBvZiB0aGUgY3VycmVudCBtb250aCcsXG4gICAgdmFsdWU6IHZhbHVlcy5lbmRPZkN1cnJlbnRNb250aCxcbiAgICBvcmRlcjogNCxcbiAgICBncmFudWxhcml0eTogQ29uc3RhbnRzLk1PTlRILFxuICB9LFxuICB7XG4gICAgbGFiZWw6ICdTdGFydCBvZiB0aGUgbmV4dCBtb250aCcsXG4gICAgdmFsdWU6IHZhbHVlcy5zdGFydE9mTmV4dE1vbnRoLFxuICAgIG9yZGVyOiA1LFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuTU9OVEgsXG4gIH0sXG4gIHtcbiAgICBsYWJlbDogJ0VuZCBvZiB0aGUgbmV4dCBtb250aCcsXG4gICAgdmFsdWU6IHZhbHVlcy5lbmRPZk5leHRNb250aCxcbiAgICBvcmRlcjogNixcbiAgICBncmFudWxhcml0eTogQ29uc3RhbnRzLk1PTlRILFxuICB9LFxuICB7XG4gICAgbGFiZWw6ICdTdGFydCBvZiB0aGUgcHJldmlvdXMgeWVhcicsXG4gICAgdmFsdWU6IHZhbHVlcy5zdGFydE9mUHJldmlvdXNZZWFyLFxuICAgIG9yZGVyOiAxLFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuWUVBUixcbiAgICBwYXN0OiB0cnVlLFxuICB9LFxuICB7XG4gICAgbGFiZWw6ICdFbmQgb2YgdGhlIHByZXZpb3VzIHllYXInLFxuICAgIHZhbHVlOiB2YWx1ZXMuZW5kT2ZQcmV2aW91c1llYXIsXG4gICAgb3JkZXI6IDIsXG4gICAgZ3JhbnVsYXJpdHk6IENvbnN0YW50cy5ZRUFSLFxuICAgIHBhc3Q6IHRydWUsXG4gIH0sXG4gIHtcbiAgICBsYWJlbDogJ1N0YXJ0IG9mIHRoZSBjdXJyZW50IHllYXInLFxuICAgIHZhbHVlOiB2YWx1ZXMuc3RhcnRPZkN1cnJlbnRZZWFyLFxuICAgIG9yZGVyOiAzLFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuWUVBUixcbiAgICBwYXN0OiB0cnVlLFxuICB9LFxuICB7XG4gICAgbGFiZWw6ICdFbmQgb2YgdGhlIGN1cnJlbnQgeWVhcicsXG4gICAgdmFsdWU6IHZhbHVlcy5lbmRPZkN1cnJlbnRZZWFyLFxuICAgIG9yZGVyOiA0LFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuWUVBUixcbiAgfSxcbiAge1xuICAgIGxhYmVsOiAnU3RhcnQgb2YgdGhlIG5leHQgeWVhcicsXG4gICAgdmFsdWU6IHZhbHVlcy5zdGFydE9mTmV4dFllYXIsXG4gICAgb3JkZXI6IDUsXG4gICAgZ3JhbnVsYXJpdHk6IENvbnN0YW50cy5ZRUFSLFxuICB9LFxuICB7XG4gICAgbGFiZWw6ICdFbmQgb2YgdGhlIG5leHQgeWVhcicsXG4gICAgdmFsdWU6IHZhbHVlcy5lbmRPZk5leHRZZWFyLFxuICAgIG9yZGVyOiA2LFxuICAgIGdyYW51bGFyaXR5OiBDb25zdGFudHMuWUVBUixcbiAgfSxcbl07XG4iXX0=