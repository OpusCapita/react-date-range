import Constants from './constants';
import RelativeConstants from '../relative/constants';
import translate from '../../translations/translate';

var getNounsForm = function getNounsForm(timing) {
  switch (Math.abs(timing)) {
    case 1:
      {
        return Constants.SINGULAR;
      }
    default:
      {
        return Constants.PLURAL;
      }
  }
};

var getLabel = function getLabel(unit, timing, translations) {
  switch (unit) {
    case RelativeConstants.MONTH:
      {
        return translate(translations, 'month', getNounsForm(timing));
      }
    case RelativeConstants.WEEK:
      {
        return translate(translations, 'week', getNounsForm(timing));
      }
    default:
      {
        return translate(translations, 'day', getNounsForm(timing));
      }
  }
};

var formatLabel = function formatLabel(endDate, translations) {
  var timing = endDate.timing,
      unit = endDate.unit;

  var count = timing > 0 ? '+' + timing : timing;
  return ' (' + count + ') ' + getLabel(unit, timing, translations);
};

export default (function (startDate, endDate, translations) {
  return (startDate.label || '') + '  - ' + formatLabel(endDate, translations);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3BlcmlvZC9wZXJpb2QtbGFiZWwuZm9ybWF0dGVyLmpzIl0sIm5hbWVzIjpbIkNvbnN0YW50cyIsIlJlbGF0aXZlQ29uc3RhbnRzIiwidHJhbnNsYXRlIiwiZ2V0Tm91bnNGb3JtIiwidGltaW5nIiwiTWF0aCIsImFicyIsIlNJTkdVTEFSIiwiUExVUkFMIiwiZ2V0TGFiZWwiLCJ1bml0IiwidHJhbnNsYXRpb25zIiwiTU9OVEgiLCJXRUVLIiwiZm9ybWF0TGFiZWwiLCJlbmREYXRlIiwiY291bnQiLCJzdGFydERhdGUiLCJsYWJlbCJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsU0FBUCxNQUFzQixhQUF0QjtBQUNBLE9BQU9DLGlCQUFQLE1BQThCLHVCQUE5QjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsOEJBQXRCOztBQUVBLElBQU1DLGVBQWUsU0FBZkEsWUFBZSxDQUFDQyxNQUFELEVBQVk7QUFDL0IsVUFBUUMsS0FBS0MsR0FBTCxDQUFTRixNQUFULENBQVI7QUFDRSxTQUFLLENBQUw7QUFBUTtBQUNOLGVBQU9KLFVBQVVPLFFBQWpCO0FBQ0Q7QUFDRDtBQUFTO0FBQ1AsZUFBT1AsVUFBVVEsTUFBakI7QUFDRDtBQU5IO0FBUUQsQ0FURDs7QUFXQSxJQUFNQyxXQUFXLFNBQVhBLFFBQVcsQ0FBQ0MsSUFBRCxFQUFPTixNQUFQLEVBQWVPLFlBQWYsRUFBZ0M7QUFDL0MsVUFBUUQsSUFBUjtBQUNFLFNBQUtULGtCQUFrQlcsS0FBdkI7QUFBOEI7QUFDNUIsZUFBT1YsVUFBVVMsWUFBVixFQUF3QixPQUF4QixFQUFpQ1IsYUFBYUMsTUFBYixDQUFqQyxDQUFQO0FBQ0Q7QUFDRCxTQUFLSCxrQkFBa0JZLElBQXZCO0FBQTZCO0FBQzNCLGVBQU9YLFVBQVVTLFlBQVYsRUFBd0IsTUFBeEIsRUFBZ0NSLGFBQWFDLE1BQWIsQ0FBaEMsQ0FBUDtBQUNEO0FBQ0Q7QUFBUztBQUNQLGVBQU9GLFVBQVVTLFlBQVYsRUFBd0IsS0FBeEIsRUFBK0JSLGFBQWFDLE1BQWIsQ0FBL0IsQ0FBUDtBQUNEO0FBVEg7QUFXRCxDQVpEOztBQWNBLElBQU1VLGNBQWMsU0FBZEEsV0FBYyxDQUFDQyxPQUFELEVBQVVKLFlBQVYsRUFBMkI7QUFBQSxNQUNyQ1AsTUFEcUMsR0FDcEJXLE9BRG9CLENBQ3JDWCxNQURxQztBQUFBLE1BQzdCTSxJQUQ2QixHQUNwQkssT0FEb0IsQ0FDN0JMLElBRDZCOztBQUU3QyxNQUFNTSxRQUFRWixTQUFTLENBQVQsU0FBaUJBLE1BQWpCLEdBQTRCQSxNQUExQztBQUNBLGdCQUFZWSxLQUFaLFVBQXNCUCxTQUFTQyxJQUFULEVBQWVOLE1BQWYsRUFBdUJPLFlBQXZCLENBQXRCO0FBQ0QsQ0FKRDs7QUFNQSxnQkFBZSxVQUFDTSxTQUFELEVBQVlGLE9BQVosRUFBcUJKLFlBQXJCO0FBQUEsVUFDVk0sVUFBVUMsS0FBVixJQUFtQixFQURULGFBQ2tCSixZQUFZQyxPQUFaLEVBQXFCSixZQUFyQixDQURsQjtBQUFBLENBQWYiLCJmaWxlIjoicGVyaW9kLWxhYmVsLmZvcm1hdHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IFJlbGF0aXZlQ29uc3RhbnRzIGZyb20gJy4uL3JlbGF0aXZlL2NvbnN0YW50cyc7XG5pbXBvcnQgdHJhbnNsYXRlIGZyb20gJy4uLy4uL3RyYW5zbGF0aW9ucy90cmFuc2xhdGUnO1xuXG5jb25zdCBnZXROb3Vuc0Zvcm0gPSAodGltaW5nKSA9PiB7XG4gIHN3aXRjaCAoTWF0aC5hYnModGltaW5nKSkge1xuICAgIGNhc2UgMToge1xuICAgICAgcmV0dXJuIENvbnN0YW50cy5TSU5HVUxBUjtcbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgcmV0dXJuIENvbnN0YW50cy5QTFVSQUw7XG4gICAgfVxuICB9XG59O1xuXG5jb25zdCBnZXRMYWJlbCA9ICh1bml0LCB0aW1pbmcsIHRyYW5zbGF0aW9ucykgPT4ge1xuICBzd2l0Y2ggKHVuaXQpIHtcbiAgICBjYXNlIFJlbGF0aXZlQ29uc3RhbnRzLk1PTlRIOiB7XG4gICAgICByZXR1cm4gdHJhbnNsYXRlKHRyYW5zbGF0aW9ucywgJ21vbnRoJywgZ2V0Tm91bnNGb3JtKHRpbWluZykpO1xuICAgIH1cbiAgICBjYXNlIFJlbGF0aXZlQ29uc3RhbnRzLldFRUs6IHtcbiAgICAgIHJldHVybiB0cmFuc2xhdGUodHJhbnNsYXRpb25zLCAnd2VlaycsIGdldE5vdW5zRm9ybSh0aW1pbmcpKTtcbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgcmV0dXJuIHRyYW5zbGF0ZSh0cmFuc2xhdGlvbnMsICdkYXknLCBnZXROb3Vuc0Zvcm0odGltaW5nKSk7XG4gICAgfVxuICB9XG59O1xuXG5jb25zdCBmb3JtYXRMYWJlbCA9IChlbmREYXRlLCB0cmFuc2xhdGlvbnMpID0+IHtcbiAgY29uc3QgeyB0aW1pbmcsIHVuaXQgfSA9IGVuZERhdGU7XG4gIGNvbnN0IGNvdW50ID0gdGltaW5nID4gMCA/IGArJHt0aW1pbmd9YCA6IHRpbWluZztcbiAgcmV0dXJuIGAgKCR7Y291bnR9KSAke2dldExhYmVsKHVuaXQsIHRpbWluZywgdHJhbnNsYXRpb25zKX1gO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgKHN0YXJ0RGF0ZSwgZW5kRGF0ZSwgdHJhbnNsYXRpb25zKSA9PiAoXG4gIGAke3N0YXJ0RGF0ZS5sYWJlbCB8fCAnJ30gIC0gJHtmb3JtYXRMYWJlbChlbmREYXRlLCB0cmFuc2xhdGlvbnMpfWBcbik7XG4iXX0=